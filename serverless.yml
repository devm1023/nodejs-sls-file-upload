service: apollo-jpg-upload-demo

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "us-east-1"}

  apiGateway:
    binaryMediaTypes:
      - 'multipart/form-data'

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: 
        - "Fn::GetAtt": [TargetBucket, Arn]
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        Fn::Join:
          - ""
          - - "Fn::GetAtt": [TargetBucket, Arn]
            - "/*"

plugins:
  - serverless-offline

functions:
  server:
    handler: src/handler.graphqlHandler
    events: 
      - http:
          path: src/server
          method: post
          cors: true
      - http:
          path: src/server
          method: get
          cors: true

custom:
  basename: ${self:service}-${self:provider.stage}
  bucketname: ${self:custom.basename}-${self:provider.region}-artifacts
  
resources:
 Resources:
   TargetBucket:
     Type: AWS::S3::Bucket
     Properties:
       BucketName: ${self:custom.bucketname}
       CorsConfiguration:
        CorsRules:
          -
            AllowedOrigins:
              - '*'
            AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - HEAD
            MaxAge: 3000
Outputs:
  TargetBucketName:
    Value:
      Ref: TargetBucket
